{
    "class_id": "com-snaplogic-pipeline",
    "class_version": 9,
    "link_map": {},
    "property_map": {
        "error": {
            "error_behavior": {
                "value": "none"
            }
        },
        "info": {
            "author": {
                "value": "adyava@snaplogic.com"
            },
            "label": {},
            "notes": {
                "value": null
            },
            "pipeline_doc_uri": {
                "value": null
            },
            "purpose": {
                "value": null
            }
        },
        "input": {},
        "output": {
            "11111111-1111-1111-1111-000000000000_output0": {
                "label": {
                    "value": "Confluent Kafka Consumer - output0"
                },
                "view_type": {
                    "value": "document"
                }
            }
        },
        "settings": {
            "error_param_table": {
                "value": []
            },
            "error_pipeline": {
                "expression": false,
                "value": null
            },
            "imports": {
                "value": []
            },
            "param_table": {
                "value": []
            }
        }
    },
    "render_map": {
        "default_snaplex": null,
        "detail_map": {
            "11111111-1111-1111-1111-000000000000": {
                "error": {},
                "grid_x_int": 2,
                "grid_y_int": 2,
                "index": null,
                "input": {},
                "output": {},
                "recommendation_id": null,
                "rot_int": 0,
                "rot_tail_int": 0,
                "source": "snap catagory"
            }
        },
        "pan_x_num": 0,
        "pan_y_num": 0,
        "scale_ratio": 1
    },
    "snap_map": {
        "11111111-1111-1111-1111-000000000000": {
            "class_id": "com-snaplogic-snaps-confluentkafka-confluentkafkaconsumer",
            "class_version": 1,
            "instance_id": "11111111-1111-1111-1111-000000000000",
            "property_map": {
                "account": {
                    "account_ref": {
                        "expression": false,
                        "value": {
                            "label": {
                                "expression": false,
                                "value": "Kafkatest"
                            },
                            "ref_class_id": {
                                "value": "com-snaplogic-snaps-confluentkafka-confluentkafkaaccountnoauth"
                            },
                            "ref_id": {
                                "expression": false,
                                "value": null
                            }
                        }
                    }
                },
                "error": {
                    "error0": {
                        "label": {
                            "value": "error0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    },
                    "error_behavior": {
                        "value": "fail"
                    }
                },
                "info": {
                    "label": {
                        "value": "Confluent Kafka Consumer"
                    },
                    "notes": {
                        "value": null
                    }
                },
                "output": {
                    "output0": {
                        "label": {
                            "value": "output0"
                        },
                        "view_type": {
                            "value": "document"
                        }
                    }
                },
                "settings": {
                    "ackMode": {
                        "value": "Wait after each record"
                    },
                    "ackTimeout": {
                        "expression": false,
                        "value": 10
                    },
                    "ackTimeoutPolicy": {
                        "value": "Reprocess"
                    },
                    "add1ToOffsets": {
                        "value": false
                    },
                    "autoOffsetReset": {
                        "value": "Earliest"
                    },
                    "execution_mode": {
                        "value": "Validate & Execute"
                    },
                    "groupID": {
                        "expression": false,
                        "value": "test"
                    },
                    "keyDeserializer": {
                        "value": "String"
                    },
                    "maxPollRecords": {
                        "expression": false,
                        "value": 500
                    },
                    "maxWaitingTime": {
                        "expression": false,
                        "value": 2000
                    },
                    "messageCount": {
                        "expression": false,
                        "value": 1200
                    },
                    "offset": {
                        "expression": false,
                        "value": null
                    },
                    "partitionNumber": {
                        "expression": false,
                        "value": null
                    },
                    "passThrough": {
                        "value": false
                    },
                    "seekType": {
                        "value": "End"
                    },
                    "syncCommit": {
                        "value": true
                    },
                    "topics": {
                        "expression": false,
                        "value": "TesttopicNew"
                    },
                    "valDeserializer": {
                        "value": "String"
                    }
                },
                "view_serial": 100
            }
        }
    }
}
